// <auto-generated />
using System;
using ExpenseTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpenseTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211217015100_inti")]
    partial class inti
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExpenseTracker.Models.ApplicationUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("ApplicationUser");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "123",
                            UserName = "pulak"
                        },
                        new
                        {
                            UserId = 2,
                            Password = "123",
                            UserName = "aninda"
                        },
                        new
                        {
                            UserId = 3,
                            Password = "123",
                            UserName = "Mostafa"
                        });
                });

            modelBuilder.Entity("ExpenseTracker.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "House Rent"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Water Bill"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Electric Bill"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Groceries"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Uber"
                        },
                        new
                        {
                            CategoryId = 6,
                            Name = "Medications"
                        });
                });

            modelBuilder.Entity("ExpenseTracker.Models.Expense", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expense");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Amount = 10000,
                            CategoryId = 1,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 736, DateTimeKind.Local).AddTicks(8530),
                            UserId = 1
                        },
                        new
                        {
                            ItemId = 2,
                            Amount = 600,
                            CategoryId = 2,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(15),
                            UserId = 1
                        },
                        new
                        {
                            ItemId = 3,
                            Amount = 1000,
                            CategoryId = 3,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(18),
                            UserId = 1
                        },
                        new
                        {
                            ItemId = 4,
                            Amount = 5000,
                            CategoryId = 4,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(21),
                            UserId = 1
                        },
                        new
                        {
                            ItemId = 5,
                            Amount = 2000,
                            CategoryId = 5,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(24),
                            UserId = 1
                        },
                        new
                        {
                            ItemId = 6,
                            Amount = 3000,
                            CategoryId = 6,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(26),
                            UserId = 1
                        },
                        new
                        {
                            ItemId = 7,
                            Amount = 8000,
                            CategoryId = 1,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(29),
                            UserId = 2
                        },
                        new
                        {
                            ItemId = 8,
                            Amount = 600,
                            CategoryId = 2,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(31),
                            UserId = 2
                        },
                        new
                        {
                            ItemId = 9,
                            Amount = 1000,
                            CategoryId = 3,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(34),
                            UserId = 2
                        },
                        new
                        {
                            ItemId = 10,
                            Amount = 5000,
                            CategoryId = 4,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(36),
                            UserId = 2
                        },
                        new
                        {
                            ItemId = 11,
                            Amount = 2000,
                            CategoryId = 5,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(39),
                            UserId = 2
                        },
                        new
                        {
                            ItemId = 12,
                            Amount = 3000,
                            CategoryId = 6,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(42),
                            UserId = 2
                        },
                        new
                        {
                            ItemId = 13,
                            Amount = 3000,
                            CategoryId = 1,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(44),
                            UserId = 3
                        },
                        new
                        {
                            ItemId = 14,
                            Amount = 600,
                            CategoryId = 2,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(47),
                            UserId = 3
                        },
                        new
                        {
                            ItemId = 15,
                            Amount = 1000,
                            CategoryId = 3,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(49),
                            UserId = 3
                        },
                        new
                        {
                            ItemId = 16,
                            Amount = 5000,
                            CategoryId = 4,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(52),
                            UserId = 3
                        },
                        new
                        {
                            ItemId = 17,
                            Amount = 2000,
                            CategoryId = 5,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(54),
                            UserId = 3
                        },
                        new
                        {
                            ItemId = 18,
                            Amount = 3000,
                            CategoryId = 6,
                            ExpenseDate = new DateTime(2021, 12, 17, 7, 50, 59, 737, DateTimeKind.Local).AddTicks(57),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ExpenseTracker.Models.Expense", b =>
                {
                    b.HasOne("ExpenseTracker.Models.Category", "Category")
                        .WithMany("Expense")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Expense")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ExpenseTracker.Models.ApplicationUser", b =>
                {
                    b.Navigation("Expense");
                });

            modelBuilder.Entity("ExpenseTracker.Models.Category", b =>
                {
                    b.Navigation("Expense");
                });
#pragma warning restore 612, 618
        }
    }
}
